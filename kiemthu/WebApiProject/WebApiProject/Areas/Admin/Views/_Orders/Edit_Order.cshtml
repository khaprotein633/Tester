@model WebApiProject.Models.DonHang

@{
    ViewBag.Title = "Edit_Order";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    WebApiProject.Models.Store_apiEntities db = new WebApiProject.Models.Store_apiEntities();
}
<div>
    @if (!string.IsNullOrEmpty(ViewBag.SuccessMessage) || !string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-success">
            @ViewBag.SuccessMessage
            @ViewBag.ErrorMessage
        </div>
    }
</div>
@using (Html.BeginForm("PutOrder","_Orders",FormMethod.Post, new { @class = "form-horizontal", onsubmit = "return validform()", role = "form" }))
{
    @Html.AntiForgeryToken()
<div class="card">
    <div>
        @Html.ActionLink("Quay lại", "GetAllOrders", null, new { @class = "btn btn-secondary mt-3" })
    </div>
    <div class="card-body">
        <div class="form-horizontal">
            @Html.HiddenFor(model => model.orders_id)
            @Html.HiddenFor(model => model.delivery_date)
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group row">
                <label class="col-md-2 col-form-label"> Mã phân loại</label>
                <div class="col-md-10 ">
                    @Html.DropDownListFor(model => model.oderstatus_id, new SelectList(db.oderStatusChecks.Where(s=>s.oderstatus_id!=5).ToList(), "oderstatus_id", "status"), "-- Chọn trạng thái --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.oderstatus_id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
</div>
        }


